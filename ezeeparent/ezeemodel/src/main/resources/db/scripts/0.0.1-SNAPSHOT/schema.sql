/* DROP */
DROP DATABASE IF EXISTS ezeeitco_EZEE_INVOICE;

/* CRAETE */
CREATE DATABASE IF NOT EXISTS ezeeitco_EZEE_INVOICE;
USE ezeeitco_EZEE_INVOICE;

/* TABLES */
CREATE TABLE IF NOT EXISTS EZEE_PAYER (
	ID INTEGER NOT NULL AUTO_INCREMENT,
	NAME VARCHAR(200) NOT NULL,
	ADDRESS_LINE_1 VARCHAR(200) NULL,
	ADDRESS_LINE_2 VARCHAR(200) NULL,
	SUBURB VARCHAR(50) NULL,
	CITY VARCHAR(50) NULL,
	STATE VARCHAR(10) NULL,
	POST_CODE VARCHAR(10) NULL,
	PHONE VARCHAR(20) NULL,
	FAX VARCHAR(20) NULL,
	EMAIL VARCHAR(50) NULL,
	CREATED VARCHAR(10) NULL,
	UPDATED VARCHAR(10) NULL,
	PRIMARY KEY(ID),
	UNIQUE(NAME)
);

CREATE TABLE IF NOT EXISTS EZEE_PAYEE (
	ID INTEGER NOT NULL AUTO_INCREMENT,
	NAME VARCHAR(200) NOT NULL,
	ADDRESS_LINE_1 VARCHAR(200) NULL,
	ADDRESS_LINE_2 VARCHAR(200) NULL,
	SUBURB VARCHAR(50) NULL,
	CITY VARCHAR(50) NULL,
	STATE VARCHAR(10) NULL,
	POST_CODE VARCHAR(10) NULL,
	PHONE VARCHAR(20) NULL,
	FAX VARCHAR(20) NULL,
	EMAIL VARCHAR(50) NULL,
	BANK VARCHAR(50) NULL,
	ACCOUNT_NAME VARCHAR(100) NULL,
	ACCOUNT_NUMBER VARCHAR(50) NULL,
	ACCOUNT_BSB VARCHAR(20) NULL,
	CREATED VARCHAR(10) NULL,
	UPDATED VARCHAR(10) NULL,
	PRIMARY KEY(ID),
	UNIQUE(NAME)
);

CREATE TABLE IF NOT EXISTS EZEE_DEBT_AGE_RULE (
	ID INTEGER NOT NULL AUTO_INCREMENT,
	NAME VARCHAR(200) NOT NULL,
	EOM BOOLEAN NOT NULL DEFAULT TRUE,
	INTERVAL_LENGTH SMALLINT NOT NULL,
	INTERVAL_TYPE VARCHAR(10) NOT NULL,
	CREATED VARCHAR(10) NULL,
	UPDATED VARCHAR(10) NULL,
	PRIMARY KEY(ID),
	UNIQUE(NAME)
);

CREATE TABLE IF NOT EXISTS EZEE_CONFIGURATION (
	ID INTEGER NOT NULL AUTO_INCREMENT,
	VERSION VARCHAR(20) NOT NULL,
	INVOICE_TAX_RATE DECIMAL(4,2) NOT NULL DEFAULT 0.1,
	DEFAULT_DEBT_AGE_RULE VARCHAR(200) NULL,
	DEFAULT_INVOICE_SUPPLIER VARCHAR(200) NULL,
	DEFAULT_INVOICE_PREMISES VARCHAR(200) NULL,
	DEFAULT_MANUAL_TAX BOOLEAN NULL DEFAULT TRUE,
	CREATED VARCHAR(10) NULL,
	UPDATED VARCHAR(10) NULL,
	PRIMARY KEY(ID)
);

CREATE TABLE IF NOT EXISTS EZEE_INVOICE (
	ID INTEGER NOT NULL AUTO_INCREMENT,
	INVOICE_ID VARCHAR(100) NOT NULL,
	AMOUNT DECIMAL(10,2) NOT NULL,
	TAX DECIMAL(10,2) NOT NULL,
	DESCRIPTION VARCHAR(200) NULL,
	MANUAL_TAX BOOLEAN NOT NULL DEFAULT TRUE,
	CLASSIFICATION VARCHAR(20) NOT NULL DEFAULT 'expense',
	FILENAME VARCHAR(100) NULL,
	FILE MEDIUMBLOB NULL,
	DUE_DATE VARCHAR(10) NULL,
	INVOICE_DATE VARCHAR(10) NULL,
	PAYMENT_DATE VARCHAR(10) NULL,
	CREATED VARCHAR(10) NULL,
	UPDATED VARCHAR(10) NULL,
	UNIQUE(INVOICE_ID),
	PRIMARY KEY(ID)
);

CREATE TABLE IF NOT EXISTS EZEE_INVOICE_TO_PAYEE_MAPPING (
	INVOICE_ID INTEGER NOT NULL,
	PAYEE_ID INTEGER NOT NULL,
	FOREIGN KEY (INVOICE_ID) REFERENCES EZEE_INVOICE(ID),
	FOREIGN KEY (PAYEE_ID) REFERENCES EZEE_PAYEE(ID),
	PRIMARY KEY(INVOICE_ID,PAYEE_ID)
);

CREATE TABLE IF NOT EXISTS EZEE_INVOICE_TO_PAYER_MAPPING (
	INVOICE_ID INTEGER NOT NULL,
	PAYER_ID INTEGER NOT NULL,
	FOREIGN KEY (INVOICE_ID) REFERENCES EZEE_INVOICE(ID),
	FOREIGN KEY (PAYER_ID) REFERENCES EZEE_PAYER(ID),
	PRIMARY KEY(INVOICE_ID,PAYER_ID)
);

CREATE TABLE IF NOT EXISTS EZEE_INVOICE_TO_DEBT_AGE_MAPPING (
	INVOICE_ID INTEGER NOT NULL,
	DEBT_AGE_RULE_ID INTEGER NOT NULL,
	FOREIGN KEY (INVOICE_ID) REFERENCES EZEE_INVOICE(ID),
	FOREIGN KEY (DEBT_AGE_RULE_ID) REFERENCES EZEE_DEBT_AGE_RULE(ID),
	PRIMARY KEY(INVOICE_ID,DEBT_AGE_RULE_ID)
);

CREATE TABLE IF NOT EXISTS EZEE_PAYMENT (
	ID INTEGER NOT NULL AUTO_INCREMENT,
	PAYMENT_DATE VARCHAR(10) NOT NULL,
	PAYMENT_TYPE VARCHAR(20) NOT NULL,
	DESCRIPTION VARCHAR(200) NOT NULL,
	CHEQUE_NUMBER VARCHAR(30) NULL,
	CHEQUE_PRESENTED BOOLEAN NOT NULL DEFAULT FALSE,
	CREATED VARCHAR(10) NULL,
	UPDATED VARCHAR(10) NULL,
	PRIMARY KEY(ID)
);

CREATE TABLE IF NOT EXISTS EZEE_PAYMENT_TO_INVOICE_MAPPING (
	INVOICE_ID INTEGER NOT NULL,
	PAYMENT_ID INTEGER NOT NULL,
	FOREIGN KEY (INVOICE_ID) REFERENCES EZEE_INVOICE(ID),
	FOREIGN KEY (PAYMENT_ID) REFERENCES EZEE_PAYMENT(ID),
	PRIMARY KEY(INVOICE_ID,PAYMENT_ID)
);

CREATE TABLE IF NOT EXISTS EZEE_USER (
	ID INTEGER NOT NULL AUTO_INCREMENT,
	FIRST_NAME VARCHAR(100) NULL,
	LAST_NAME VARCHAR(100) NULL,
	USER_NAME VARCHAR(50) NOT NULL,
	PASSWORD VARCHAR(100) NOT NULL,
	EMAIL VARCHAR(100) NULL,
	CREATED VARCHAR(10) NULL,
	UPDATED VARCHAR(10) NULL,
	PRIMARY KEY(ID),
	UNIQUE(USER_NAME),
	UNIQUE(EMAIL)
);